diff --git a/node_modules/@remix-run/react/dist/components.js b/node_modules/@remix-run/react/dist/components.js
index 6872657..1ccfd56 100644
--- a/node_modules/@remix-run/react/dist/components.js
+++ b/node_modules/@remix-run/react/dist/components.js
@@ -609,7 +609,8 @@ function Scripts(props) {
             key: `${routeId} | ${key}`,
             deferredData: deferredData,
             routeId: routeId,
-            dataKey: key
+            dataKey: key,
+            nonce: props.nonce
           }));
           return `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;
         } else {
@@ -639,6 +640,7 @@ window.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(
 
 import(${JSON.stringify(manifest.entry.module)});`;
     return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement("script", _rollupPluginBabelHelpers["extends"]({}, props, {
+      nonce: props.nonce,
       suppressHydrationWarning: true,
       dangerouslySetInnerHTML: markup.createHtml(contextScript),
       type: undefined
@@ -646,6 +648,7 @@ import(${JSON.stringify(manifest.entry.module)});`;
       suppressHydrationWarning: true,
       dangerouslySetInnerHTML: markup.createHtml(routeModulesScript),
       type: "module",
+      nonce: props.nonce,
       async: true
     })));
     // disabled deps array because we are purposefully only rendering this once
@@ -656,6 +659,7 @@ import(${JSON.stringify(manifest.entry.module)});`;
   if (!isStatic && typeof __remixContext === "object" && __remixContext.a) {
     for (let i = 0; i < __remixContext.a; i++) {
       deferredScripts.push( /*#__PURE__*/React__namespace.createElement(DeferredHydrationScript, {
+        nonce: props.nonce,
         key: i
       }));
     }
@@ -694,7 +698,8 @@ import(${JSON.stringify(manifest.entry.module)});`;
 function DeferredHydrationScript({
   dataKey,
   deferredData,
-  routeId
+  routeId,
+  nonce
 }) {
   if (typeof document === "undefined" && deferredData && dataKey && routeId) {
     invariant(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`);
@@ -707,6 +712,7 @@ function DeferredHydrationScript({
     typeof document === "undefined" && deferredData && dataKey && routeId ? null : /*#__PURE__*/React__namespace.createElement("script", {
       async: true,
       suppressHydrationWarning: true,
+      nonce,
       dangerouslySetInnerHTML: {
         __html: " "
       }
@@ -715,10 +721,12 @@ function DeferredHydrationScript({
     resolve: deferredData.data[dataKey],
     errorElement: /*#__PURE__*/React__namespace.createElement(ErrorDeferredHydrationScript, {
       dataKey: dataKey,
-      routeId: routeId
+      routeId: routeId,
+      nonce,
     }),
     children: data => /*#__PURE__*/React__namespace.createElement("script", {
       async: true,
+      nonce,
       suppressHydrationWarning: true,
       dangerouslySetInnerHTML: {
         __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, ${markup.escapeHtml(JSON.stringify(data))});`
@@ -726,6 +734,7 @@ function DeferredHydrationScript({
     })
   }) : /*#__PURE__*/React__namespace.createElement("script", {
     async: true,
+    nonce,
     suppressHydrationWarning: true,
     dangerouslySetInnerHTML: {
       __html: " "
@@ -734,7 +743,8 @@ function DeferredHydrationScript({
 }
 function ErrorDeferredHydrationScript({
   dataKey,
-  routeId
+  routeId,
+  nonce
 }) {
   let error = reactRouterDom.useAsyncError();
   let toSerialize = {
@@ -746,6 +756,7 @@ function ErrorDeferredHydrationScript({
   }
   return /*#__PURE__*/React__namespace.createElement("script", {
     suppressHydrationWarning: true,
+    nonce,
     dangerouslySetInnerHTML: {
       __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, !1, ${markup.escapeHtml(JSON.stringify(toSerialize))});`
     }
diff --git a/node_modules/@remix-run/react/dist/esm/components.js b/node_modules/@remix-run/react/dist/esm/components.js
index 1d2db41..fd5b4f1 100644
--- a/node_modules/@remix-run/react/dist/esm/components.js
+++ b/node_modules/@remix-run/react/dist/esm/components.js
@@ -585,7 +585,8 @@ function Scripts(props) {
             key: `${routeId} | ${key}`,
             deferredData: deferredData,
             routeId: routeId,
-            dataKey: key
+            dataKey: key,
+            nonce: props.nonce
           }));
           return `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;
         } else {
@@ -616,10 +617,12 @@ window.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(
 import(${JSON.stringify(manifest.entry.module)});`;
     return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("script", _extends({}, props, {
       suppressHydrationWarning: true,
+      nonce: props.nonce,
       dangerouslySetInnerHTML: createHtml(contextScript),
       type: undefined
     })), /*#__PURE__*/React.createElement("script", _extends({}, props, {
       suppressHydrationWarning: true,
+      nonce: props.nonce,
       dangerouslySetInnerHTML: createHtml(routeModulesScript),
       type: "module",
       async: true
@@ -632,7 +635,8 @@ import(${JSON.stringify(manifest.entry.module)});`;
   if (!isStatic && typeof __remixContext === "object" && __remixContext.a) {
     for (let i = 0; i < __remixContext.a; i++) {
       deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {
-        key: i
+        key: i,
+        nonce: props.nonce
       }));
     }
   }
@@ -670,7 +674,8 @@ import(${JSON.stringify(manifest.entry.module)});`;
 function DeferredHydrationScript({
   dataKey,
   deferredData,
-  routeId
+  routeId,
+  nonce
 }) {
   if (typeof document === "undefined" && deferredData && dataKey && routeId) {
     invariant(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`);
@@ -682,6 +687,7 @@ function DeferredHydrationScript({
     // To reproduce a hydration mismatch, just render null as a fallback.
     typeof document === "undefined" && deferredData && dataKey && routeId ? null : /*#__PURE__*/React.createElement("script", {
       async: true,
+      nonce,
       suppressHydrationWarning: true,
       dangerouslySetInnerHTML: {
         __html: " "
@@ -691,10 +697,12 @@ function DeferredHydrationScript({
     resolve: deferredData.data[dataKey],
     errorElement: /*#__PURE__*/React.createElement(ErrorDeferredHydrationScript, {
       dataKey: dataKey,
-      routeId: routeId
+      routeId: routeId,
+      nonce,
     }),
     children: data => /*#__PURE__*/React.createElement("script", {
       async: true,
+      nonce,
       suppressHydrationWarning: true,
       dangerouslySetInnerHTML: {
         __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, ${escapeHtml(JSON.stringify(data))});`
@@ -702,6 +710,7 @@ function DeferredHydrationScript({
     })
   }) : /*#__PURE__*/React.createElement("script", {
     async: true,
+    nonce,
     suppressHydrationWarning: true,
     dangerouslySetInnerHTML: {
       __html: " "
@@ -710,7 +719,8 @@ function DeferredHydrationScript({
 }
 function ErrorDeferredHydrationScript({
   dataKey,
-  routeId
+  routeId,
+  nonce
 }) {
   let error = useAsyncError();
   let toSerialize = {
@@ -722,6 +732,7 @@ function ErrorDeferredHydrationScript({
   }
   return /*#__PURE__*/React.createElement("script", {
     suppressHydrationWarning: true,
+    nonce,
     dangerouslySetInnerHTML: {
       __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, !1, ${escapeHtml(JSON.stringify(toSerialize))});`
     }
diff --git a/node_modules/@remix-run/react/dist/esm/data.js b/node_modules/@remix-run/react/dist/esm/data.js
index ca015b8..9a11c2d 100644
--- a/node_modules/@remix-run/react/dist/esm/data.js
+++ b/node_modules/@remix-run/react/dist/esm/data.js
@@ -27,7 +27,8 @@ async function fetchData(request, routeId) {
   let url = new URL(request.url);
   url.searchParams.set("_data", routeId);
   let init = {
-    signal: request.signal
+    signal: request.signal,
+    headers: request.headers
   };
   if (request.method !== "GET") {
     init.method = request.method;
